/*

Explicaci√≥n de Cursores Parametrizados en PL/SQL
Un cursor parametrizado en PL/SQL es un cursor que recibe par√°metros para filtrar los datos en su consulta. Esto permite reutilizar el mismo cursor para diferentes valores sin necesidad de escribir m√∫ltiples cursores.

Resumen
Los cursores parametrizados permiten filtrar datos din√°micamente.
Son √∫tiles cuando necesitamos usar un mismo cursor para distintos valores.
Reducen la duplicaci√≥n de c√≥digo y mejoran la eficiencia en PL/SQL.

Este enfoque hace que el c√≥digo sea m√°s flexible, claro y reutilizable.

*/

SET SERVEROUTPUT ON;

DECLARE
    -- üîπ Cursor parametrizado que filtra productos por fabricante
    CURSOR c_productos_fabricante (p_cod_fab NUMBER) IS
        SELECT * FROM producto
        WHERE codigo_fabricante = p_cod_fab
        ORDER BY precio;

    -- Variable para almacenar un registro del cursor
    v_producto producto%ROWTYPE;

    -- Variable que almacena el c√≥digo del fabricante ingresado por el usuario
    v_codigo_fabricante fabricante.codigo%TYPE := &codigo;

BEGIN
    -- üîπ Abrimos el cursor y pasamos el c√≥digo del fabricante como par√°metro
    OPEN c_productos_fabricante(v_codigo_fabricante);

    DBMS_OUTPUT.PUT_LINE('===== Productos del fabricante ' || v_codigo_fabricante || ' =====');

    -- üîπ Recorremos el cursor y obtenemos los datos
    LOOP
        FETCH c_productos_fabricante INTO v_producto;
        EXIT WHEN c_productos_fabricante%NOTFOUND; -- Salir si no hay m√°s registros

        -- üìå Imprimir la informaci√≥n del producto
        DBMS_OUTPUT.PUT_LINE('C√≥digo: ' || v_producto.codigo);
        DBMS_OUTPUT.PUT_LINE('Nombre: ' || v_producto.nombre);
        DBMS_OUTPUT.PUT_LINE('Precio: ' || v_producto.precio || '‚Ç¨');
        DBMS_OUTPUT.PUT_LINE('----------------------------------');
    END LOOP;

    -- üîπ Cerrar el cursor despu√©s del uso
    CLOSE c_productos_fabricante;

EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('‚ö†Ô∏è Error inesperado: ' || SQLERRM);
END;
/
